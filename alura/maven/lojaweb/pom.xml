<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	
	<groupId>br.com.alura.maven</groupId>
	<artifactId>lojaweb</artifactId>
	<packaging>war</packaging>
	<version>1.0.0-SNAPSHOT</version>
	<name>lojaweb Maven Webapp</name>
	<url>https://github.com/MarceloLeite2604</url>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
	</properties>
	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>3.8.1</version>
			<!-- O escopo de teste indica que a package está disponível para testes 
				da aplicação. Quando ela for empacotada, esta dependência não será colocada. -->
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.1.0</version>
			<!-- Assim como o escopo "compile", o "provided" informa que esta dependência 
				é necessária para compilar o projeto, entretanto o container onde a aplicação 
				irá rodar já nos fornece (provide) a dependência. Logo, não é necessário 
				incluí-la no pacote. -->
			<scope>provided</scope>
			<!-- Também há um escopo inverso do "provided", onde a biblioteca não 
				será utilizada para compilar. Ela só será utilizada em tempo de execução. 
				Este é o escopo "runtime". De qualquer forma, o Eclipse irá considerar dependências 
				de "runtime" como de "compile" porque é possível executar os programas pelo 
				Eclipse. Entretanto, se utilizarmos no nosso código uma classe de uma dependência 
				com o escopo "runtime", ao tentar compilar o maven irá acusar que a classe 
				solicitada não existe. -->
		</dependency>
		<dependency>
			<groupId>br.com.caelum.stella</groupId>
			<artifactId>caelum-stella-core</artifactId>
			<version>2.1.2</version>
			<!-- Este escopo é o padrão das dependências. Ela indica que, quando a 
				aplicação for empacotada, esta dependência será incluída, pois é uma dependência 
				de compilação. -->
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>br.com.alura.maven</groupId>
			<artifactId>produtos</artifactId>
			<version>1.0-SNAPSHOT</version>
		</dependency>
	</dependencies>
	<build>
		<finalName>lojaweb</finalName>
		<plugins>
			<plugin>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
				<version>9.3.7.v20160115</version>
				<configuration>
					<scanIntervalSeconds>10</scanIntervalSeconds>
					<webApp>
						<contextPath>/loja</contextPath>
					</webApp>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>
